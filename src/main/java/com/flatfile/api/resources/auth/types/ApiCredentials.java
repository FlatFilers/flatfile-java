/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.auth.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ApiCredentials.Builder.class)
public final class ApiCredentials {
    private final String clientId;

    private final String secret;

    private final Map<String, Object> additionalProperties;

    private ApiCredentials(String clientId, String secret, Map<String, Object> additionalProperties) {
        this.clientId = clientId;
        this.secret = secret;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("clientId")
    public String getClientId() {
        return clientId;
    }

    @JsonProperty("secret")
    public String getSecret() {
        return secret;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApiCredentials && equalTo((ApiCredentials) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApiCredentials other) {
        return clientId.equals(other.clientId) && secret.equals(other.secret);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.clientId, this.secret);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ClientIdStage builder() {
        return new Builder();
    }

    public interface ClientIdStage {
        SecretStage clientId(String clientId);

        Builder from(ApiCredentials other);
    }

    public interface SecretStage {
        _FinalStage secret(String secret);
    }

    public interface _FinalStage {
        ApiCredentials build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ClientIdStage, SecretStage, _FinalStage {
        private String clientId;

        private String secret;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(ApiCredentials other) {
            clientId(other.getClientId());
            secret(other.getSecret());
            return this;
        }

        @Override
        @JsonSetter("clientId")
        public SecretStage clientId(String clientId) {
            this.clientId = clientId;
            return this;
        }

        @Override
        @JsonSetter("secret")
        public _FinalStage secret(String secret) {
            this.secret = secret;
            return this;
        }

        @Override
        public ApiCredentials build() {
            return new ApiCredentials(clientId, secret, additionalProperties);
        }
    }
}
