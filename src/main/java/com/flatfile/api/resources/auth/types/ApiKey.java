/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.auth.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ApiKey.Builder.class)
public final class ApiKey {
    private final String id;

    private final Optional<String> rawKey;

    private final ApiKeyType type;

    private final Optional<String> environmentId;

    private final Optional<String> accountId;

    private final List<ApiKeyOperation> operations;

    private final OffsetDateTime createdAt;

    private final Optional<OffsetDateTime> updatedAt;

    private final Optional<OffsetDateTime> deletedAt;

    private final Optional<String> secret;

    private final Map<String, Object> additionalProperties;

    private ApiKey(
            String id,
            Optional<String> rawKey,
            ApiKeyType type,
            Optional<String> environmentId,
            Optional<String> accountId,
            List<ApiKeyOperation> operations,
            OffsetDateTime createdAt,
            Optional<OffsetDateTime> updatedAt,
            Optional<OffsetDateTime> deletedAt,
            Optional<String> secret,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.rawKey = rawKey;
        this.type = type;
        this.environmentId = environmentId;
        this.accountId = accountId;
        this.operations = operations;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deletedAt = deletedAt;
        this.secret = secret;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("rawKey")
    public Optional<String> getRawKey() {
        return rawKey;
    }

    @JsonProperty("type")
    public ApiKeyType getType() {
        return type;
    }

    @JsonProperty("environmentId")
    public Optional<String> getEnvironmentId() {
        return environmentId;
    }

    @JsonProperty("accountId")
    public Optional<String> getAccountId() {
        return accountId;
    }

    @JsonProperty("operations")
    public List<ApiKeyOperation> getOperations() {
        return operations;
    }

    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("updatedAt")
    public Optional<OffsetDateTime> getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty("deletedAt")
    public Optional<OffsetDateTime> getDeletedAt() {
        return deletedAt;
    }

    @JsonProperty("secret")
    public Optional<String> getSecret() {
        return secret;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApiKey && equalTo((ApiKey) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApiKey other) {
        return id.equals(other.id)
                && rawKey.equals(other.rawKey)
                && type.equals(other.type)
                && environmentId.equals(other.environmentId)
                && accountId.equals(other.accountId)
                && operations.equals(other.operations)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && deletedAt.equals(other.deletedAt)
                && secret.equals(other.secret);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.rawKey,
                this.type,
                this.environmentId,
                this.accountId,
                this.operations,
                this.createdAt,
                this.updatedAt,
                this.deletedAt,
                this.secret);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        TypeStage id(String id);

        Builder from(ApiKey other);
    }

    public interface TypeStage {
        CreatedAtStage type(ApiKeyType type);
    }

    public interface CreatedAtStage {
        _FinalStage createdAt(OffsetDateTime createdAt);
    }

    public interface _FinalStage {
        ApiKey build();

        _FinalStage rawKey(Optional<String> rawKey);

        _FinalStage rawKey(String rawKey);

        _FinalStage environmentId(Optional<String> environmentId);

        _FinalStage environmentId(String environmentId);

        _FinalStage accountId(Optional<String> accountId);

        _FinalStage accountId(String accountId);

        _FinalStage operations(List<ApiKeyOperation> operations);

        _FinalStage addOperations(ApiKeyOperation operations);

        _FinalStage addAllOperations(List<ApiKeyOperation> operations);

        _FinalStage updatedAt(Optional<OffsetDateTime> updatedAt);

        _FinalStage updatedAt(OffsetDateTime updatedAt);

        _FinalStage deletedAt(Optional<OffsetDateTime> deletedAt);

        _FinalStage deletedAt(OffsetDateTime deletedAt);

        _FinalStage secret(Optional<String> secret);

        _FinalStage secret(String secret);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, TypeStage, CreatedAtStage, _FinalStage {
        private String id;

        private ApiKeyType type;

        private OffsetDateTime createdAt;

        private Optional<String> secret = Optional.empty();

        private Optional<OffsetDateTime> deletedAt = Optional.empty();

        private Optional<OffsetDateTime> updatedAt = Optional.empty();

        private List<ApiKeyOperation> operations = new ArrayList<>();

        private Optional<String> accountId = Optional.empty();

        private Optional<String> environmentId = Optional.empty();

        private Optional<String> rawKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(ApiKey other) {
            id(other.getId());
            rawKey(other.getRawKey());
            type(other.getType());
            environmentId(other.getEnvironmentId());
            accountId(other.getAccountId());
            operations(other.getOperations());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            deletedAt(other.getDeletedAt());
            secret(other.getSecret());
            return this;
        }

        @Override
        @JsonSetter("id")
        public TypeStage id(String id) {
            this.id = id;
            return this;
        }

        @Override
        @JsonSetter("type")
        public CreatedAtStage type(ApiKeyType type) {
            this.type = type;
            return this;
        }

        @Override
        @JsonSetter("createdAt")
        public _FinalStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @Override
        public _FinalStage secret(String secret) {
            this.secret = Optional.of(secret);
            return this;
        }

        @Override
        @JsonSetter(value = "secret", nulls = Nulls.SKIP)
        public _FinalStage secret(Optional<String> secret) {
            this.secret = secret;
            return this;
        }

        @Override
        public _FinalStage deletedAt(OffsetDateTime deletedAt) {
            this.deletedAt = Optional.of(deletedAt);
            return this;
        }

        @Override
        @JsonSetter(value = "deletedAt", nulls = Nulls.SKIP)
        public _FinalStage deletedAt(Optional<OffsetDateTime> deletedAt) {
            this.deletedAt = deletedAt;
            return this;
        }

        @Override
        public _FinalStage updatedAt(OffsetDateTime updatedAt) {
            this.updatedAt = Optional.of(updatedAt);
            return this;
        }

        @Override
        @JsonSetter(value = "updatedAt", nulls = Nulls.SKIP)
        public _FinalStage updatedAt(Optional<OffsetDateTime> updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        @Override
        public _FinalStage addAllOperations(List<ApiKeyOperation> operations) {
            this.operations.addAll(operations);
            return this;
        }

        @Override
        public _FinalStage addOperations(ApiKeyOperation operations) {
            this.operations.add(operations);
            return this;
        }

        @Override
        @JsonSetter(value = "operations", nulls = Nulls.SKIP)
        public _FinalStage operations(List<ApiKeyOperation> operations) {
            this.operations.clear();
            this.operations.addAll(operations);
            return this;
        }

        @Override
        public _FinalStage accountId(String accountId) {
            this.accountId = Optional.of(accountId);
            return this;
        }

        @Override
        @JsonSetter(value = "accountId", nulls = Nulls.SKIP)
        public _FinalStage accountId(Optional<String> accountId) {
            this.accountId = accountId;
            return this;
        }

        @Override
        public _FinalStage environmentId(String environmentId) {
            this.environmentId = Optional.of(environmentId);
            return this;
        }

        @Override
        @JsonSetter(value = "environmentId", nulls = Nulls.SKIP)
        public _FinalStage environmentId(Optional<String> environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        @Override
        public _FinalStage rawKey(String rawKey) {
            this.rawKey = Optional.of(rawKey);
            return this;
        }

        @Override
        @JsonSetter(value = "rawKey", nulls = Nulls.SKIP)
        public _FinalStage rawKey(Optional<String> rawKey) {
            this.rawKey = rawKey;
            return this;
        }

        @Override
        public ApiKey build() {
            return new ApiKey(
                    id,
                    rawKey,
                    type,
                    environmentId,
                    accountId,
                    operations,
                    createdAt,
                    updatedAt,
                    deletedAt,
                    secret,
                    additionalProperties);
        }
    }
}
