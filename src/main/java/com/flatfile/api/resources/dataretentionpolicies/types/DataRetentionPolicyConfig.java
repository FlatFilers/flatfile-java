/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.dataretentionpolicies.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.EnvironmentId;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DataRetentionPolicyConfig.Builder.class)
public final class DataRetentionPolicyConfig implements IDataRetentionPolicyConfig {
    private final DataRetentionPolicyEnum type;

    private final int period;

    private final EnvironmentId environmentId;

    private final Map<String, Object> additionalProperties;

    private DataRetentionPolicyConfig(
            DataRetentionPolicyEnum type,
            int period,
            EnvironmentId environmentId,
            Map<String, Object> additionalProperties) {
        this.type = type;
        this.period = period;
        this.environmentId = environmentId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("type")
    @java.lang.Override
    public DataRetentionPolicyEnum getType() {
        return type;
    }

    @JsonProperty("period")
    @java.lang.Override
    public int getPeriod() {
        return period;
    }

    @JsonProperty("environmentId")
    @java.lang.Override
    public EnvironmentId getEnvironmentId() {
        return environmentId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DataRetentionPolicyConfig && equalTo((DataRetentionPolicyConfig) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DataRetentionPolicyConfig other) {
        return type.equals(other.type) && period == other.period && environmentId.equals(other.environmentId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.type, this.period, this.environmentId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TypeStage builder() {
        return new Builder();
    }

    public interface TypeStage {
        PeriodStage type(@NotNull DataRetentionPolicyEnum type);

        Builder from(DataRetentionPolicyConfig other);
    }

    public interface PeriodStage {
        EnvironmentIdStage period(int period);
    }

    public interface EnvironmentIdStage {
        _FinalStage environmentId(@NotNull EnvironmentId environmentId);
    }

    public interface _FinalStage {
        DataRetentionPolicyConfig build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TypeStage, PeriodStage, EnvironmentIdStage, _FinalStage {
        private DataRetentionPolicyEnum type;

        private int period;

        private EnvironmentId environmentId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(DataRetentionPolicyConfig other) {
            type(other.getType());
            period(other.getPeriod());
            environmentId(other.getEnvironmentId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("type")
        public PeriodStage type(@NotNull DataRetentionPolicyEnum type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("period")
        public EnvironmentIdStage period(int period) {
            this.period = period;
            return this;
        }

        @java.lang.Override
        @JsonSetter("environmentId")
        public _FinalStage environmentId(@NotNull EnvironmentId environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId, "environmentId must not be null");
            return this;
        }

        @java.lang.Override
        public DataRetentionPolicyConfig build() {
            return new DataRetentionPolicyConfig(type, period, environmentId, additionalProperties);
        }
    }
}
