/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.mapping.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ProgramSummary.Builder.class)
public final class ProgramSummary {
    private final int totalRuleCount;

    private final int addedRuleCount;

    private final int deletedRuleCount;

    private final Map<String, Object> additionalProperties;

    private ProgramSummary(
            int totalRuleCount, int addedRuleCount, int deletedRuleCount, Map<String, Object> additionalProperties) {
        this.totalRuleCount = totalRuleCount;
        this.addedRuleCount = addedRuleCount;
        this.deletedRuleCount = deletedRuleCount;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Total number of mapping rules
     */
    @JsonProperty("totalRuleCount")
    public int getTotalRuleCount() {
        return totalRuleCount;
    }

    /**
     * @return Number of mapping rules added
     */
    @JsonProperty("addedRuleCount")
    public int getAddedRuleCount() {
        return addedRuleCount;
    }

    /**
     * @return Number of mapping rules deleted
     */
    @JsonProperty("deletedRuleCount")
    public int getDeletedRuleCount() {
        return deletedRuleCount;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ProgramSummary && equalTo((ProgramSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ProgramSummary other) {
        return totalRuleCount == other.totalRuleCount
                && addedRuleCount == other.addedRuleCount
                && deletedRuleCount == other.deletedRuleCount;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.totalRuleCount, this.addedRuleCount, this.deletedRuleCount);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TotalRuleCountStage builder() {
        return new Builder();
    }

    public interface TotalRuleCountStage {
        AddedRuleCountStage totalRuleCount(int totalRuleCount);

        Builder from(ProgramSummary other);
    }

    public interface AddedRuleCountStage {
        DeletedRuleCountStage addedRuleCount(int addedRuleCount);
    }

    public interface DeletedRuleCountStage {
        _FinalStage deletedRuleCount(int deletedRuleCount);
    }

    public interface _FinalStage {
        ProgramSummary build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TotalRuleCountStage, AddedRuleCountStage, DeletedRuleCountStage, _FinalStage {
        private int totalRuleCount;

        private int addedRuleCount;

        private int deletedRuleCount;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ProgramSummary other) {
            totalRuleCount(other.getTotalRuleCount());
            addedRuleCount(other.getAddedRuleCount());
            deletedRuleCount(other.getDeletedRuleCount());
            return this;
        }

        /**
         * <p>Total number of mapping rules</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalRuleCount")
        public AddedRuleCountStage totalRuleCount(int totalRuleCount) {
            this.totalRuleCount = totalRuleCount;
            return this;
        }

        /**
         * <p>Number of mapping rules added</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("addedRuleCount")
        public DeletedRuleCountStage addedRuleCount(int addedRuleCount) {
            this.addedRuleCount = addedRuleCount;
            return this;
        }

        /**
         * <p>Number of mapping rules deleted</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("deletedRuleCount")
        public _FinalStage deletedRuleCount(int deletedRuleCount) {
            this.deletedRuleCount = deletedRuleCount;
            return this;
        }

        @java.lang.Override
        public ProgramSummary build() {
            return new ProgramSummary(totalRuleCount, addedRuleCount, deletedRuleCount, additionalProperties);
        }
    }
}
