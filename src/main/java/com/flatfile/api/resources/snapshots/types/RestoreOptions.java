/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.snapshots.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = RestoreOptions.Builder.class)
public final class RestoreOptions {
    private final boolean created;

    private final boolean updated;

    private final boolean deleted;

    private final Map<String, Object> additionalProperties;

    private RestoreOptions(
            boolean created, boolean updated, boolean deleted, Map<String, Object> additionalProperties) {
        this.created = created;
        this.updated = updated;
        this.deleted = deleted;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("created")
    public boolean getCreated() {
        return created;
    }

    @JsonProperty("updated")
    public boolean getUpdated() {
        return updated;
    }

    @JsonProperty("deleted")
    public boolean getDeleted() {
        return deleted;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RestoreOptions && equalTo((RestoreOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RestoreOptions other) {
        return created == other.created && updated == other.updated && deleted == other.deleted;
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.created, this.updated, this.deleted);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CreatedStage builder() {
        return new Builder();
    }

    public interface CreatedStage {
        UpdatedStage created(boolean created);

        Builder from(RestoreOptions other);
    }

    public interface UpdatedStage {
        DeletedStage updated(boolean updated);
    }

    public interface DeletedStage {
        _FinalStage deleted(boolean deleted);
    }

    public interface _FinalStage {
        RestoreOptions build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CreatedStage, UpdatedStage, DeletedStage, _FinalStage {
        private boolean created;

        private boolean updated;

        private boolean deleted;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(RestoreOptions other) {
            created(other.getCreated());
            updated(other.getUpdated());
            deleted(other.getDeleted());
            return this;
        }

        @Override
        @JsonSetter("created")
        public UpdatedStage created(boolean created) {
            this.created = created;
            return this;
        }

        @Override
        @JsonSetter("updated")
        public DeletedStage updated(boolean updated) {
            this.updated = updated;
            return this;
        }

        @Override
        @JsonSetter("deleted")
        public _FinalStage deleted(boolean deleted) {
            this.deleted = deleted;
            return this;
        }

        @Override
        public RestoreOptions build() {
            return new RestoreOptions(created, updated, deleted, additionalProperties);
        }
    }
}
