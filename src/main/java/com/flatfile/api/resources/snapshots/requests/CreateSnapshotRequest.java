/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.snapshots.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.SheetId;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateSnapshotRequest.Builder.class)
public final class CreateSnapshotRequest {
    private final SheetId sheetId;

    private final Optional<String> label;

    private final Map<String, Object> additionalProperties;

    private CreateSnapshotRequest(SheetId sheetId, Optional<String> label, Map<String, Object> additionalProperties) {
        this.sheetId = sheetId;
        this.label = label;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return ID of sheet
     */
    @JsonProperty("sheetId")
    public SheetId getSheetId() {
        return sheetId;
    }

    /**
     * @return Label for the snapshot
     */
    @JsonProperty("label")
    public Optional<String> getLabel() {
        return label;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateSnapshotRequest && equalTo((CreateSnapshotRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateSnapshotRequest other) {
        return sheetId.equals(other.sheetId) && label.equals(other.label);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.sheetId, this.label);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SheetIdStage builder() {
        return new Builder();
    }

    public interface SheetIdStage {
        _FinalStage sheetId(@NotNull SheetId sheetId);

        Builder from(CreateSnapshotRequest other);
    }

    public interface _FinalStage {
        CreateSnapshotRequest build();

        _FinalStage label(Optional<String> label);

        _FinalStage label(String label);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SheetIdStage, _FinalStage {
        private SheetId sheetId;

        private Optional<String> label = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateSnapshotRequest other) {
            sheetId(other.getSheetId());
            label(other.getLabel());
            return this;
        }

        /**
         * <p>ID of sheet</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("sheetId")
        public _FinalStage sheetId(@NotNull SheetId sheetId) {
            this.sheetId = Objects.requireNonNull(sheetId, "sheetId must not be null");
            return this;
        }

        /**
         * <p>Label for the snapshot</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage label(String label) {
            this.label = Optional.ofNullable(label);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "label", nulls = Nulls.SKIP)
        public _FinalStage label(Optional<String> label) {
            this.label = label;
            return this;
        }

        @java.lang.Override
        public CreateSnapshotRequest build() {
            return new CreateSnapshotRequest(sheetId, label, additionalProperties);
        }
    }
}
