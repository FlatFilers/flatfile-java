/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.snapshots.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Snapshot.Builder.class)
public final class Snapshot {
    private final String id;

    private final String sheetId;

    private final Optional<String> label;

    private final Optional<SnapshotSummary> summary;

    private final OffsetDateTime createdAt;

    private final String createdBy;

    private final Map<String, Object> additionalProperties;

    private Snapshot(
            String id,
            String sheetId,
            Optional<String> label,
            Optional<SnapshotSummary> summary,
            OffsetDateTime createdAt,
            String createdBy,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.sheetId = sheetId;
        this.label = label;
        this.summary = summary;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("sheetId")
    public String getSheetId() {
        return sheetId;
    }

    @JsonProperty("label")
    public Optional<String> getLabel() {
        return label;
    }

    @JsonProperty("summary")
    public Optional<SnapshotSummary> getSummary() {
        return summary;
    }

    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("createdBy")
    public String getCreatedBy() {
        return createdBy;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Snapshot && equalTo((Snapshot) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Snapshot other) {
        return id.equals(other.id)
                && sheetId.equals(other.sheetId)
                && label.equals(other.label)
                && summary.equals(other.summary)
                && createdAt.equals(other.createdAt)
                && createdBy.equals(other.createdBy);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id, this.sheetId, this.label, this.summary, this.createdAt, this.createdBy);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        SheetIdStage id(String id);

        Builder from(Snapshot other);
    }

    public interface SheetIdStage {
        CreatedAtStage sheetId(String sheetId);
    }

    public interface CreatedAtStage {
        CreatedByStage createdAt(OffsetDateTime createdAt);
    }

    public interface CreatedByStage {
        _FinalStage createdBy(String createdBy);
    }

    public interface _FinalStage {
        Snapshot build();

        _FinalStage label(Optional<String> label);

        _FinalStage label(String label);

        _FinalStage summary(Optional<SnapshotSummary> summary);

        _FinalStage summary(SnapshotSummary summary);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, SheetIdStage, CreatedAtStage, CreatedByStage, _FinalStage {
        private String id;

        private String sheetId;

        private OffsetDateTime createdAt;

        private String createdBy;

        private Optional<SnapshotSummary> summary = Optional.empty();

        private Optional<String> label = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(Snapshot other) {
            id(other.getId());
            sheetId(other.getSheetId());
            label(other.getLabel());
            summary(other.getSummary());
            createdAt(other.getCreatedAt());
            createdBy(other.getCreatedBy());
            return this;
        }

        @Override
        @JsonSetter("id")
        public SheetIdStage id(String id) {
            this.id = id;
            return this;
        }

        @Override
        @JsonSetter("sheetId")
        public CreatedAtStage sheetId(String sheetId) {
            this.sheetId = sheetId;
            return this;
        }

        @Override
        @JsonSetter("createdAt")
        public CreatedByStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @Override
        @JsonSetter("createdBy")
        public _FinalStage createdBy(String createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        @Override
        public _FinalStage summary(SnapshotSummary summary) {
            this.summary = Optional.of(summary);
            return this;
        }

        @Override
        @JsonSetter(value = "summary", nulls = Nulls.SKIP)
        public _FinalStage summary(Optional<SnapshotSummary> summary) {
            this.summary = summary;
            return this;
        }

        @Override
        public _FinalStage label(String label) {
            this.label = Optional.of(label);
            return this;
        }

        @Override
        @JsonSetter(value = "label", nulls = Nulls.SKIP)
        public _FinalStage label(Optional<String> label) {
            this.label = label;
            return this;
        }

        @Override
        public Snapshot build() {
            return new Snapshot(id, sheetId, label, summary, createdAt, createdBy, additionalProperties);
        }
    }
}
