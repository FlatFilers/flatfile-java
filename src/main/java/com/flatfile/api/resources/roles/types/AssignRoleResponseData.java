/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.roles.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.ISuccessData;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AssignRoleResponseData.Builder.class)
public final class AssignRoleResponseData implements ISuccessData {
    private final boolean success;

    private final String roleId;

    private final ActorIdUnion actorId;

    private final ResourceIdUnion resourceId;

    private final Map<String, Object> additionalProperties;

    private AssignRoleResponseData(
            boolean success,
            String roleId,
            ActorIdUnion actorId,
            ResourceIdUnion resourceId,
            Map<String, Object> additionalProperties) {
        this.success = success;
        this.roleId = roleId;
        this.actorId = actorId;
        this.resourceId = resourceId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("success")
    @Override
    public boolean getSuccess() {
        return success;
    }

    @JsonProperty("roleId")
    public String getRoleId() {
        return roleId;
    }

    @JsonProperty("actorId")
    public ActorIdUnion getActorId() {
        return actorId;
    }

    @JsonProperty("resourceId")
    public ResourceIdUnion getResourceId() {
        return resourceId;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AssignRoleResponseData && equalTo((AssignRoleResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AssignRoleResponseData other) {
        return success == other.success
                && roleId.equals(other.roleId)
                && actorId.equals(other.actorId)
                && resourceId.equals(other.resourceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.success, this.roleId, this.actorId, this.resourceId);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SuccessStage builder() {
        return new Builder();
    }

    public interface SuccessStage {
        RoleIdStage success(boolean success);

        Builder from(AssignRoleResponseData other);
    }

    public interface RoleIdStage {
        ActorIdStage roleId(String roleId);
    }

    public interface ActorIdStage {
        ResourceIdStage actorId(ActorIdUnion actorId);
    }

    public interface ResourceIdStage {
        _FinalStage resourceId(ResourceIdUnion resourceId);
    }

    public interface _FinalStage {
        AssignRoleResponseData build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SuccessStage, RoleIdStage, ActorIdStage, ResourceIdStage, _FinalStage {
        private boolean success;

        private String roleId;

        private ActorIdUnion actorId;

        private ResourceIdUnion resourceId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(AssignRoleResponseData other) {
            success(other.getSuccess());
            roleId(other.getRoleId());
            actorId(other.getActorId());
            resourceId(other.getResourceId());
            return this;
        }

        @Override
        @JsonSetter("success")
        public RoleIdStage success(boolean success) {
            this.success = success;
            return this;
        }

        @Override
        @JsonSetter("roleId")
        public ActorIdStage roleId(String roleId) {
            this.roleId = roleId;
            return this;
        }

        @Override
        @JsonSetter("actorId")
        public ResourceIdStage actorId(ActorIdUnion actorId) {
            this.actorId = actorId;
            return this;
        }

        @Override
        @JsonSetter("resourceId")
        public _FinalStage resourceId(ResourceIdUnion resourceId) {
            this.resourceId = resourceId;
            return this;
        }

        @Override
        public AssignRoleResponseData build() {
            return new AssignRoleResponseData(success, roleId, actorId, resourceId, additionalProperties);
        }
    }
}
