/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.entitlements.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ListEntitlementsRequest.Builder.class)
public final class ListEntitlementsRequest {
    private final String resourceId;

    private final Map<String, Object> additionalProperties;

    private ListEntitlementsRequest(String resourceId, Map<String, Object> additionalProperties) {
        this.resourceId = resourceId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The associated Resource ID for the entitlements.
     */
    @JsonProperty("resourceId")
    public String getResourceId() {
        return resourceId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ListEntitlementsRequest && equalTo((ListEntitlementsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ListEntitlementsRequest other) {
        return resourceId.equals(other.resourceId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.resourceId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResourceIdStage builder() {
        return new Builder();
    }

    public interface ResourceIdStage {
        _FinalStage resourceId(String resourceId);

        Builder from(ListEntitlementsRequest other);
    }

    public interface _FinalStage {
        ListEntitlementsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResourceIdStage, _FinalStage {
        private String resourceId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ListEntitlementsRequest other) {
            resourceId(other.getResourceId());
            return this;
        }

        /**
         * <p>The associated Resource ID for the entitlements.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("resourceId")
        public _FinalStage resourceId(String resourceId) {
            this.resourceId = resourceId;
            return this;
        }

        @java.lang.Override
        public ListEntitlementsRequest build() {
            return new ListEntitlementsRequest(resourceId, additionalProperties);
        }
    }
}
