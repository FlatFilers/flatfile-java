/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.accounts.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.AppId;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AccountPatch.Builder.class)
public final class AccountPatch {
    private final AppId defaultAppId;

    private final Map<String, Object> additionalProperties;

    private AccountPatch(AppId defaultAppId, Map<String, Object> additionalProperties) {
        this.defaultAppId = defaultAppId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("defaultAppId")
    public AppId getDefaultAppId() {
        return defaultAppId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AccountPatch && equalTo((AccountPatch) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AccountPatch other) {
        return defaultAppId.equals(other.defaultAppId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.defaultAppId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DefaultAppIdStage builder() {
        return new Builder();
    }

    public interface DefaultAppIdStage {
        _FinalStage defaultAppId(AppId defaultAppId);

        Builder from(AccountPatch other);
    }

    public interface _FinalStage {
        AccountPatch build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DefaultAppIdStage, _FinalStage {
        private AppId defaultAppId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AccountPatch other) {
            defaultAppId(other.getDefaultAppId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("defaultAppId")
        public _FinalStage defaultAppId(AppId defaultAppId) {
            this.defaultAppId = defaultAppId;
            return this;
        }

        @java.lang.Override
        public AccountPatch build() {
            return new AccountPatch(defaultAppId, additionalProperties);
        }
    }
}
