/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.workbooks.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.Action;
import com.flatfile.api.resources.commons.types.EnvironmentId;
import com.flatfile.api.resources.commons.types.SpaceId;
import com.flatfile.api.resources.sheets.types.SheetConfig;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateWorkbookConfig.Builder.class)
public final class CreateWorkbookConfig {
    private final String name;

    private final Optional<List<String>> labels;

    private final Optional<SpaceId> spaceId;

    private final Optional<EnvironmentId> environmentId;

    private final Optional<String> namespace;

    private final Optional<List<SheetConfig>> sheets;

    private final Optional<List<Action>> actions;

    private final Optional<WorkbookConfigSettings> settings;

    private final Optional<Object> metadata;

    private final Optional<List<WorkbookTreatments>> treatments;

    private final Map<String, Object> additionalProperties;

    private CreateWorkbookConfig(
            String name,
            Optional<List<String>> labels,
            Optional<SpaceId> spaceId,
            Optional<EnvironmentId> environmentId,
            Optional<String> namespace,
            Optional<List<SheetConfig>> sheets,
            Optional<List<Action>> actions,
            Optional<WorkbookConfigSettings> settings,
            Optional<Object> metadata,
            Optional<List<WorkbookTreatments>> treatments,
            Map<String, Object> additionalProperties) {
        this.name = name;
        this.labels = labels;
        this.spaceId = spaceId;
        this.environmentId = environmentId;
        this.namespace = namespace;
        this.sheets = sheets;
        this.actions = actions;
        this.settings = settings;
        this.metadata = metadata;
        this.treatments = treatments;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The name of the Workbook.
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return An optional list of labels for the Workbook.
     */
    @JsonProperty("labels")
    public Optional<List<String>> getLabels() {
        return labels;
    }

    /**
     * @return Space to associate with the Workbook.
     */
    @JsonProperty("spaceId")
    public Optional<SpaceId> getSpaceId() {
        return spaceId;
    }

    /**
     * @return Environment to associate with the Workbook
     */
    @JsonProperty("environmentId")
    public Optional<EnvironmentId> getEnvironmentId() {
        return environmentId;
    }

    /**
     * @return Optional namespace to apply to the Workbook.
     */
    @JsonProperty("namespace")
    public Optional<String> getNamespace() {
        return namespace;
    }

    /**
     * @return Sheets to create on the Workbook.
     */
    @JsonProperty("sheets")
    public Optional<List<SheetConfig>> getSheets() {
        return sheets;
    }

    /**
     * @return Actions to create on the Workbook.
     */
    @JsonProperty("actions")
    public Optional<List<Action>> getActions() {
        return actions;
    }

    /**
     * @return The Workbook settings.
     */
    @JsonProperty("settings")
    public Optional<WorkbookConfigSettings> getSettings() {
        return settings;
    }

    /**
     * @return Metadata for the workbook
     */
    @JsonProperty("metadata")
    public Optional<Object> getMetadata() {
        return metadata;
    }

    /**
     * @return Treatments for the workbook
     */
    @JsonProperty("treatments")
    public Optional<List<WorkbookTreatments>> getTreatments() {
        return treatments;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateWorkbookConfig && equalTo((CreateWorkbookConfig) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateWorkbookConfig other) {
        return name.equals(other.name)
                && labels.equals(other.labels)
                && spaceId.equals(other.spaceId)
                && environmentId.equals(other.environmentId)
                && namespace.equals(other.namespace)
                && sheets.equals(other.sheets)
                && actions.equals(other.actions)
                && settings.equals(other.settings)
                && metadata.equals(other.metadata)
                && treatments.equals(other.treatments);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.name,
                this.labels,
                this.spaceId,
                this.environmentId,
                this.namespace,
                this.sheets,
                this.actions,
                this.settings,
                this.metadata,
                this.treatments);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        _FinalStage name(@NotNull String name);

        Builder from(CreateWorkbookConfig other);
    }

    public interface _FinalStage {
        CreateWorkbookConfig build();

        _FinalStage labels(Optional<List<String>> labels);

        _FinalStage labels(List<String> labels);

        _FinalStage spaceId(Optional<SpaceId> spaceId);

        _FinalStage spaceId(SpaceId spaceId);

        _FinalStage environmentId(Optional<EnvironmentId> environmentId);

        _FinalStage environmentId(EnvironmentId environmentId);

        _FinalStage namespace(Optional<String> namespace);

        _FinalStage namespace(String namespace);

        _FinalStage sheets(Optional<List<SheetConfig>> sheets);

        _FinalStage sheets(List<SheetConfig> sheets);

        _FinalStage actions(Optional<List<Action>> actions);

        _FinalStage actions(List<Action> actions);

        _FinalStage settings(Optional<WorkbookConfigSettings> settings);

        _FinalStage settings(WorkbookConfigSettings settings);

        _FinalStage metadata(Optional<Object> metadata);

        _FinalStage metadata(Object metadata);

        _FinalStage treatments(Optional<List<WorkbookTreatments>> treatments);

        _FinalStage treatments(List<WorkbookTreatments> treatments);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, _FinalStage {
        private String name;

        private Optional<List<WorkbookTreatments>> treatments = Optional.empty();

        private Optional<Object> metadata = Optional.empty();

        private Optional<WorkbookConfigSettings> settings = Optional.empty();

        private Optional<List<Action>> actions = Optional.empty();

        private Optional<List<SheetConfig>> sheets = Optional.empty();

        private Optional<String> namespace = Optional.empty();

        private Optional<EnvironmentId> environmentId = Optional.empty();

        private Optional<SpaceId> spaceId = Optional.empty();

        private Optional<List<String>> labels = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateWorkbookConfig other) {
            name(other.getName());
            labels(other.getLabels());
            spaceId(other.getSpaceId());
            environmentId(other.getEnvironmentId());
            namespace(other.getNamespace());
            sheets(other.getSheets());
            actions(other.getActions());
            settings(other.getSettings());
            metadata(other.getMetadata());
            treatments(other.getTreatments());
            return this;
        }

        /**
         * <p>The name of the Workbook.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        /**
         * <p>Treatments for the workbook</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage treatments(List<WorkbookTreatments> treatments) {
            this.treatments = Optional.ofNullable(treatments);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "treatments", nulls = Nulls.SKIP)
        public _FinalStage treatments(Optional<List<WorkbookTreatments>> treatments) {
            this.treatments = treatments;
            return this;
        }

        /**
         * <p>Metadata for the workbook</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage metadata(Object metadata) {
            this.metadata = Optional.ofNullable(metadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "metadata", nulls = Nulls.SKIP)
        public _FinalStage metadata(Optional<Object> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * <p>The Workbook settings.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage settings(WorkbookConfigSettings settings) {
            this.settings = Optional.ofNullable(settings);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "settings", nulls = Nulls.SKIP)
        public _FinalStage settings(Optional<WorkbookConfigSettings> settings) {
            this.settings = settings;
            return this;
        }

        /**
         * <p>Actions to create on the Workbook.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage actions(List<Action> actions) {
            this.actions = Optional.ofNullable(actions);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "actions", nulls = Nulls.SKIP)
        public _FinalStage actions(Optional<List<Action>> actions) {
            this.actions = actions;
            return this;
        }

        /**
         * <p>Sheets to create on the Workbook.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage sheets(List<SheetConfig> sheets) {
            this.sheets = Optional.ofNullable(sheets);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sheets", nulls = Nulls.SKIP)
        public _FinalStage sheets(Optional<List<SheetConfig>> sheets) {
            this.sheets = sheets;
            return this;
        }

        /**
         * <p>Optional namespace to apply to the Workbook.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage namespace(String namespace) {
            this.namespace = Optional.ofNullable(namespace);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "namespace", nulls = Nulls.SKIP)
        public _FinalStage namespace(Optional<String> namespace) {
            this.namespace = namespace;
            return this;
        }

        /**
         * <p>Environment to associate with the Workbook</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage environmentId(EnvironmentId environmentId) {
            this.environmentId = Optional.ofNullable(environmentId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "environmentId", nulls = Nulls.SKIP)
        public _FinalStage environmentId(Optional<EnvironmentId> environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        /**
         * <p>Space to associate with the Workbook.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage spaceId(SpaceId spaceId) {
            this.spaceId = Optional.ofNullable(spaceId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "spaceId", nulls = Nulls.SKIP)
        public _FinalStage spaceId(Optional<SpaceId> spaceId) {
            this.spaceId = spaceId;
            return this;
        }

        /**
         * <p>An optional list of labels for the Workbook.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage labels(List<String> labels) {
            this.labels = Optional.ofNullable(labels);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "labels", nulls = Nulls.SKIP)
        public _FinalStage labels(Optional<List<String>> labels) {
            this.labels = labels;
            return this;
        }

        @java.lang.Override
        public CreateWorkbookConfig build() {
            return new CreateWorkbookConfig(
                    name,
                    labels,
                    spaceId,
                    environmentId,
                    namespace,
                    sheets,
                    actions,
                    settings,
                    metadata,
                    treatments,
                    additionalProperties);
        }
    }
}
