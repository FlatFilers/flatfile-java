/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.assistant.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.AccountId;
import com.flatfile.api.resources.commons.types.PromptId;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Prompt.Builder.class)
public final class Prompt {
    private final PromptId id;

    private final String createdById;

    private final AccountId accountId;

    private final String prompt;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Optional<OffsetDateTime> deletedAt;

    private final Map<String, Object> additionalProperties;

    private Prompt(
            PromptId id,
            String createdById,
            AccountId accountId,
            String prompt,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Optional<OffsetDateTime> deletedAt,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.createdById = createdById;
        this.accountId = accountId;
        this.prompt = prompt;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deletedAt = deletedAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public PromptId getId() {
        return id;
    }

    /**
     * @return ID of the user/guest who created the prompt
     */
    @JsonProperty("createdById")
    public String getCreatedById() {
        return createdById;
    }

    @JsonProperty("accountId")
    public AccountId getAccountId() {
        return accountId;
    }

    /**
     * @return Text for prompts for AI Assist
     */
    @JsonProperty("prompt")
    public String getPrompt() {
        return prompt;
    }

    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty("deletedAt")
    public Optional<OffsetDateTime> getDeletedAt() {
        return deletedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Prompt && equalTo((Prompt) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Prompt other) {
        return id.equals(other.id)
                && createdById.equals(other.createdById)
                && accountId.equals(other.accountId)
                && prompt.equals(other.prompt)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && deletedAt.equals(other.deletedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id, this.createdById, this.accountId, this.prompt, this.createdAt, this.updatedAt, this.deletedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        CreatedByIdStage id(PromptId id);

        Builder from(Prompt other);
    }

    public interface CreatedByIdStage {
        AccountIdStage createdById(String createdById);
    }

    public interface AccountIdStage {
        PromptStage accountId(AccountId accountId);
    }

    public interface PromptStage {
        CreatedAtStage prompt(String prompt);
    }

    public interface CreatedAtStage {
        UpdatedAtStage createdAt(OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        _FinalStage updatedAt(OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        Prompt build();

        _FinalStage deletedAt(Optional<OffsetDateTime> deletedAt);

        _FinalStage deletedAt(OffsetDateTime deletedAt);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage,
                    CreatedByIdStage,
                    AccountIdStage,
                    PromptStage,
                    CreatedAtStage,
                    UpdatedAtStage,
                    _FinalStage {
        private PromptId id;

        private String createdById;

        private AccountId accountId;

        private String prompt;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private Optional<OffsetDateTime> deletedAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Prompt other) {
            id(other.getId());
            createdById(other.getCreatedById());
            accountId(other.getAccountId());
            prompt(other.getPrompt());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            deletedAt(other.getDeletedAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public CreatedByIdStage id(PromptId id) {
            this.id = id;
            return this;
        }

        /**
         * <p>ID of the user/guest who created the prompt</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdById")
        public AccountIdStage createdById(String createdById) {
            this.createdById = createdById;
            return this;
        }

        @java.lang.Override
        @JsonSetter("accountId")
        public PromptStage accountId(AccountId accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * <p>Text for prompts for AI Assist</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("prompt")
        public CreatedAtStage prompt(String prompt) {
            this.prompt = prompt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(OffsetDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage deletedAt(OffsetDateTime deletedAt) {
            this.deletedAt = Optional.of(deletedAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "deletedAt", nulls = Nulls.SKIP)
        public _FinalStage deletedAt(Optional<OffsetDateTime> deletedAt) {
            this.deletedAt = deletedAt;
            return this;
        }

        @java.lang.Override
        public Prompt build() {
            return new Prompt(
                    id, createdById, accountId, prompt, createdAt, updatedAt, deletedAt, additionalProperties);
        }
    }
}
