/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.assistant.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import com.flatfile.api.resources.commons.types.EnvironmentId;
import com.flatfile.api.resources.commons.types.SpaceId;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PromptCreate.Builder.class)
public final class PromptCreate {
    private final Optional<PromptTypeEnum> promptType;

    private final String prompt;

    private final EnvironmentId environmentId;

    private final SpaceId spaceId;

    private final Map<String, Object> additionalProperties;

    private PromptCreate(
            Optional<PromptTypeEnum> promptType,
            String prompt,
            EnvironmentId environmentId,
            SpaceId spaceId,
            Map<String, Object> additionalProperties) {
        this.promptType = promptType;
        this.prompt = prompt;
        this.environmentId = environmentId;
        this.spaceId = spaceId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Type of prompt; Defaults to AI_ASSIST
     */
    @JsonProperty("promptType")
    public Optional<PromptTypeEnum> getPromptType() {
        return promptType;
    }

    @JsonProperty("prompt")
    public String getPrompt() {
        return prompt;
    }

    @JsonProperty("environmentId")
    public EnvironmentId getEnvironmentId() {
        return environmentId;
    }

    @JsonProperty("spaceId")
    public SpaceId getSpaceId() {
        return spaceId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PromptCreate && equalTo((PromptCreate) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PromptCreate other) {
        return promptType.equals(other.promptType)
                && prompt.equals(other.prompt)
                && environmentId.equals(other.environmentId)
                && spaceId.equals(other.spaceId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.promptType, this.prompt, this.environmentId, this.spaceId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PromptStage builder() {
        return new Builder();
    }

    public interface PromptStage {
        EnvironmentIdStage prompt(@NotNull String prompt);

        Builder from(PromptCreate other);
    }

    public interface EnvironmentIdStage {
        SpaceIdStage environmentId(@NotNull EnvironmentId environmentId);
    }

    public interface SpaceIdStage {
        _FinalStage spaceId(@NotNull SpaceId spaceId);
    }

    public interface _FinalStage {
        PromptCreate build();

        _FinalStage promptType(Optional<PromptTypeEnum> promptType);

        _FinalStage promptType(PromptTypeEnum promptType);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PromptStage, EnvironmentIdStage, SpaceIdStage, _FinalStage {
        private String prompt;

        private EnvironmentId environmentId;

        private SpaceId spaceId;

        private Optional<PromptTypeEnum> promptType = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PromptCreate other) {
            promptType(other.getPromptType());
            prompt(other.getPrompt());
            environmentId(other.getEnvironmentId());
            spaceId(other.getSpaceId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("prompt")
        public EnvironmentIdStage prompt(@NotNull String prompt) {
            this.prompt = Objects.requireNonNull(prompt, "prompt must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("environmentId")
        public SpaceIdStage environmentId(@NotNull EnvironmentId environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId, "environmentId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("spaceId")
        public _FinalStage spaceId(@NotNull SpaceId spaceId) {
            this.spaceId = Objects.requireNonNull(spaceId, "spaceId must not be null");
            return this;
        }

        /**
         * <p>Type of prompt; Defaults to AI_ASSIST</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage promptType(PromptTypeEnum promptType) {
            this.promptType = Optional.ofNullable(promptType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "promptType", nulls = Nulls.SKIP)
        public _FinalStage promptType(Optional<PromptTypeEnum> promptType) {
            this.promptType = promptType;
            return this;
        }

        @java.lang.Override
        public PromptCreate build() {
            return new PromptCreate(promptType, prompt, environmentId, spaceId, additionalProperties);
        }
    }
}
