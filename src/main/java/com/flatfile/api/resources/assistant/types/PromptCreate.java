/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.assistant.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PromptCreate.Builder.class)
public final class PromptCreate {
    private final String prompt;

    private final Map<String, Object> additionalProperties;

    private PromptCreate(String prompt, Map<String, Object> additionalProperties) {
        this.prompt = prompt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("prompt")
    public String getPrompt() {
        return prompt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PromptCreate && equalTo((PromptCreate) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PromptCreate other) {
        return prompt.equals(other.prompt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.prompt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PromptStage builder() {
        return new Builder();
    }

    public interface PromptStage {
        _FinalStage prompt(String prompt);

        Builder from(PromptCreate other);
    }

    public interface _FinalStage {
        PromptCreate build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PromptStage, _FinalStage {
        private String prompt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PromptCreate other) {
            prompt(other.getPrompt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("prompt")
        public _FinalStage prompt(String prompt) {
            this.prompt = prompt;
            return this;
        }

        @java.lang.Override
        public PromptCreate build() {
            return new PromptCreate(prompt, additionalProperties);
        }
    }
}
