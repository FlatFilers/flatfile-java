/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flatfile.api.resources.users.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flatfile.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CreateApiTokenRequest.Builder.class)
public final class CreateApiTokenRequest {
    private final String tenantId;

    private final Map<String, Object> additionalProperties;

    private CreateApiTokenRequest(String tenantId, Map<String, Object> additionalProperties) {
        this.tenantId = tenantId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("tenantId")
    public String getTenantId() {
        return tenantId;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateApiTokenRequest && equalTo((CreateApiTokenRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateApiTokenRequest other) {
        return tenantId.equals(other.tenantId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.tenantId);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TenantIdStage builder() {
        return new Builder();
    }

    public interface TenantIdStage {
        _FinalStage tenantId(String tenantId);

        Builder from(CreateApiTokenRequest other);
    }

    public interface _FinalStage {
        CreateApiTokenRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TenantIdStage, _FinalStage {
        private String tenantId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(CreateApiTokenRequest other) {
            tenantId(other.getTenantId());
            return this;
        }

        @Override
        @JsonSetter("tenantId")
        public _FinalStage tenantId(String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        @Override
        public CreateApiTokenRequest build() {
            return new CreateApiTokenRequest(tenantId, additionalProperties);
        }
    }
}
